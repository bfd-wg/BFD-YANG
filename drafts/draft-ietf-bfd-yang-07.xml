<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="no"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<rfc category="std" docName="draft-ietf-bfd-yang-07.txt" ipr="trust200902">
  <front>
    <title abbrev="BFD YANG">YANG Data Model for Bidirectional Forwarding
    Detection (BFD)</title>

    <author fullname="Reshad Rahman" initials="R." role="editor"
            surname="Rahman">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country>Canada</country>
        </postal>

        <email>rrahman@cisco.com</email>
      </address>
    </author>

    <author fullname="Lianshu Zheng" initials="L." role="editor"
            surname="Zheng">
      <organization>Huawei Technologies</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country>China</country>
        </postal>

        <email>vero.zheng@huawei.com</email>
      </address>
    </author>

    <author fullname="Mahesh Jethanandani" initials="M." role="editor"
            surname="Jethanandani">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country/>
        </postal>

        <email>mjethanandani@gmail.com</email>
      </address>
    </author>

    <author fullname="Santosh Pallagatti" initials="S." surname="Pallagatti">
      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country>India</country>
        </postal>

        <email>santosh.pallagatti@gmail.com</email>
      </address>
    </author>

    <author fullname="Greg Mirsky" initials="G." surname="Mirsky">
      <organization>ZTE Corporation</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country/>
        </postal>

        <email>gregimirsky@gmail.com</email>
      </address>
    </author>

    <date day="30" month="October" year="2017"/>

    <abstract>
      <t>This document defines a YANG data model that can be used to configure
      and manage Bidirectional Forwarding Detection (BFD).</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document defines a YANG data model that can be used to configure
      and manage Bidirectional Forwarding Detection <xref
      target="RFC5880">(BFD) </xref>. BFD is a network protocol which is used
      for liveness detection of arbitrary paths between systems. Some examples
      of different types of paths over which we have BFD:</t>

      <t>1) Two systems directly connected via IP. This is known as BFD over
      single-hop IP, a.k.a. <xref target="RFC5881">BFD for IPv4 and IPv6
      </xref></t>

      <t>2) Two systems connected via multiple hops as described in <xref
      target="RFC5883">BFD for Multiple Hops.</xref></t>

      <t>3) Two systems connected via MPLS Label Switched Paths (LSPs) as
      described in <xref target="RFC5884">BFD for MPLS LSP </xref></t>

      <t>4) Two systems connected via a Link Aggregation Group (LAG) interface
      as described in <xref target="RFC7130">BFD on LAG Interfaces </xref></t>

      <t>5) Two systems connected via pseudowires (PWs), this is known as
      Virtual Circuit Connectivity Verification (VCCV) as described in <xref
      target="RFC5885">BFD for PW VCCV </xref>. This is not addressed in this
      document.</t>

      <t>BFD typically does not operate on its own. Various control protocols,
      also known as BFD clients, use the services provided by BFD for their
      own operation as described in <xref target="RFC5882">Generic Application
      of BFD </xref>. The obvious candidates which use BFD are those which do
      not have "hellos" to detect failures, e.g. static routes, and routing
      protocols whose "hellos" do not support sub-second failure detection,
      e.g. OSPF and IS-IS.</t>
    </section>

    <section anchor="DESIGN-DATA" title="Design of the Data Model">
      <t>Since BFD is used for liveliness detection of various forwarding
      paths, there is no uniform key to identify a BFD session. So the BFD
      data model is split in multiple YANG modules where each module
      corresponds to one type of forwarding path. For example, BFD for IP
      single-hop is in one YANG module and BFD for MPLS-TE is in another YANG
      module. The main difference between these modules is how a BFD session
      is uniquely identified, i.e the key for the list containing the BFD
      sessions for that forwarding path. To avoid duplication of BFD
      definitions, we have common types and groupings which are used by all
      the modules.</t>

      <t>A new control-plane protocol "bfdv1" is defined and a "bfd" container
      is created under control-plane-protocol as specified in <xref
      target="RFC8022">A YANG Data Model for Routing Management </xref>. This
      new "bfd" node is augmented by all the YANG modules for their respective
      specific information.</t>

      <t>BFD can operate in the following contexts: <list style="numbers">
          <t>Network devices as described in <xref
          target="I-D.ietf-rtgwg-device-model">Network Device YANG
          Organizational Models</xref></t>

          <t>Logical Network Elements as described in <xref
          target="I-D.ietf-rtgwg-lne-model">YANG Logical Network
          Element</xref></t>

          <t>Network instances as described in <xref
          target="I-D.ietf-rtgwg-ni-model">YANG Logical Network
          Element</xref></t>
        </list> The approach taken is to do a schema-mount (see <xref
      target="I-D.ietf-netmod-schema-mount">Schema Mount</xref>) of the BFD
      model in the appropriate locations. For example, if an implementation
      supports BFD IP multi-hop in network instances, the implementation would
      do schema-mount of the BFD IP multi-hop model in a mount-point which
      resides in a network instance.</t>

      <t>The data models in this document strive to follow the "Network
      Management Datastore Architecture" (NMDA) guidelines described in <xref
      target="I-D.dsdt-nmda-guidelines"/>. This means that the data models do
      NOT have separate top-level or sibling containers for configuration and
      operational data. One exception at the moment is the model for MPLS-TE
      in <xref target="BFD-MPLS-TE-CFG"/></t>

      <section title="Design of Configuration Model">
        <t>The configuration model consists mainly of the parameters specified
        in <xref target="RFC5880">BFD</xref>. Some examples are desired
        minimum transmit interval, required minimum receive interval,
        detection multiplier, etc</t>

        <t>BFD clients are applications that use BFD for fast detection of
        failures. Some implementations have BFD session configuration under
        the BFD clients. For example, BFD session configuration under routing
        applications such as OSPF, IS-IS, BGP etc. Other implementations have
        BFD session configuration centralized under BFD, i.e. outside the
        multiple BFD clients.</t>

        <t>The BFD parameters of interest to a BFD client are mainly the
        multiplier and interval(s) since those parameters impact the
        convergence time of the BFD clients when a failure occurs. Other
        parameters such as BFD authentication are not specific to the
        requirements of the BFD client. Ideally all configuration should be 
        centralized under BFD. However, this is a problem for clients 
        of BFD which auto-discover their peers. For example, IGPs do not have the peer address 
        configured, instead the IGP is enabled on an interface and the IGP peers are
        auto-discovered. So for an operator to configure BFD to an IGP peer, the operator
        would first have to determine the peer addresses. And when a new peer is discovered, 
        BFD configuration would need to be added. To avoid this issue, we define grouping client-cfg-parms 
        in <xref target="BFD-TYPES"/> for BFD clients to configure BFD: this allows BFD clients such as the IGPs
        to have configuration (multipler and intervals) for the BFD sessions they need. 
        The mechanism how the BFD sessions are created by the BFD clients is outside the scope of this document.
        </t>

        <section anchor="BFD-COMMON-CFG"
                 title="Common BFD configuration parameters">
          <t>The basic BFD configuration parameters are: <list hangIndent="8"
              style="hanging">
              <t hangText="local-multiplier"><vspace/>This is the detection
              time multiplier as defined in <xref
              target="RFC5880">BFD</xref>.</t>

              <t hangText="desired-min-tx-interval"><vspace/>This is the
              Desired Min TX Interval as defined in <xref
              target="RFC5880">BFD</xref>.</t>

              <t hangText="required-min-rx-interval"><vspace/>This is the
              Required Min RX Interval as defined in <xref
              target="RFC5880">BFD</xref>.</t>
            </list>Although <xref target="RFC5880">BFD</xref> allows for
          different values for transmit and receive intervals, some
          implementations allow users to specify just one interval which is
          used for both transmit and receive intervals or separate values for
          transmit and receive intervals. The BFD YANG model supports this:
          there is a choice between "min-interval", used for both transmit and
          receive intervals, and "desired-min-tx-interval" and
          "required-min-rx-interval". This is supported via a grouping which
          is used by the YANG modules for the various forwarding paths. For
          BFD authentication we have: <list hangIndent="8" style="hanging">
              <t hangText="key-chain"><vspace/>This is a reference to
              key-chain defined in <xref target="RFC8177">YANG Data Model for
              Key Chains </xref>. The keys, cryptographic algotihms, key
              lifetime etc are all defined in the key-chain model.</t>

              <t hangText="replay-protection"><vspace/>This specifies
              meticulous v/s non-meticulous mode as per <xref
              target="RFC5880">BFD </xref>.</t>
            </list></t>
        </section>

        <section anchor="IP-SH-CFG" title="Single-hop IP">
          <t>For single-hop IP, there is an augment of the "bfd" data node in
          <xref target="DESIGN-DATA"/>. The "ip-sh" node contains a list of IP
          single-hop sessions where each session is uniquely identified by the
          interface and destination address pair. For the configuration
          parameters we use what is defined in <xref
          target="BFD-COMMON-CFG"/></t>

          <t><xref target="RFC5880"/> and <xref target="RFC5881"/> do not
          specify whether echo function is continuous or on demand. Therefore
          the mechanism used to start and stop echo function is implementation
          specific and should be done by augmentation: <list>
              <t>1) Configuration. This is suitable for continuous echo
              function. An example is provided in <xref
              target="ECHO-CONFIG"/>.</t>

              <t>2) RPC. This is suitable for on-demand echo function.</t>
            </list></t>
        </section>

        <section title="Multi-hop IP">
          <t>For multi-hop IP, there is an augment of the "bfd" data node in
          <xref target="DESIGN-DATA"/>.</t>

          <t>Because of multiple paths, there could be multiple multi-hop IP
          sessions between a source and a destination address. We identify
          this as a "session-group". The key for each "session-group" consists
          of: <list hangIndent="8" style="hanging">
              <t hangText="source address"><vspace/>Address belonging to the
              local system as per <xref target="RFC5883">BFD for Multiple Hops
              </xref></t>

              <t hangText="destination address"><vspace/>Address belonging to
              the remote system as per <xref target="RFC5883">BFD for Multiple
              Hops </xref></t>
            </list></t>

          <t>For the configuration parameters we use what is defined in <xref
          target="BFD-COMMON-CFG"/></t>

          <t>Here are some extra parameters: <list hangIndent="8"
              style="hanging">
              <t hangText="tx-ttl"><vspace/>TTL of outgoing BFD control
              packets.</t>

              <t hangText="rx-ttl"><vspace/>Minimum TTL of incoming BFD
              control packets.</t>
            </list></t>
        </section>

        <section anchor="BFD-MPLS-TE-CFG"
                 title="MPLS Traffic Engineering Tunnels">
          <t>For MPLS-TE tunnels, BFD is configured under the MPLS-TE tunnel
          since the desired failure detection parameters is a property of the
          MPLS-TE tunnel. This is achieved by augmenting the MPLS-TE data
          model in <xref target="I-D.ietf-teas-yang-te">YANG Data Model for TE
          Topologies </xref>. For BFD parameters which are specific to the TE
          application, e.g. whether to tear down the tunnel in the event of a
          BFD session failure, these parameters will be defined in the YANG
          model of the MPLS-TE application.</t>

          <t>On top of the usual BFD parameters, we have the following per
          MPLS-TE tunnel: <list hangIndent="8" style="hanging">
              <t hangText="encap"><vspace/>Encapsulation for the BFD packets:
              choice between IP, G-ACh and IP with G-ACh as per <xref
              target="RFC5586">MPLS Generic Associated Channel </xref></t>
            </list></t>

          <t>For general MPLS-TE data, "mpls-te" data node is added under the
          "bfd" node in <xref target="DESIGN-DATA"/>. Since some MPLS-TE
          tunnels are uni-directional there is no MPLS-TE configuration for
          these tunnels on the egress node (note that this does not apply to
          bi-directional MPLS-TP tunnels). The BFD parameters for the egress
          node are added under "mpls-te".</t>
        </section>

        <section title="MPLS Label Switched Paths">
          <t>Here we address MPLS LSPs whose FEC is an IP address. The "bfd"
          node in <xref target="DESIGN-DATA"/> is augmented with "mpls" which
          contains a list of sessions uniquely identified by an IP prefix.
          Because of multiple paths, there could be multiple MPLS sessions to
          an MPLS FEC. We identify this as a "session-group".</t>

          <t>Since these LSPs are uni-directional there is no LSP
          configuration on the egress node.</t>

          <t>The BFD parameters for the egress node are added under
          "mpls".</t>
        </section>

        <section title="Link Aggregation Groups">
          <t>Per <xref target="RFC7130">BFD on LAG Interfaces </xref>,
          configuring BFD on LAG consists of having micro-BFD sessions on each
          LAG member link. Since the BFD parameters are an attribute of the
          LAG, they should be under the LAG. However there is no LAG YANG
          model which we can augment. So a "lag" data node is added to the
          "bfd" node in <xref target="DESIGN-DATA"/>, the configuration is
          per-LAG: we have a list of LAGs. The destination IP address of the
          micro-BFD sessions is configured per-LAG and per address-family
          (IPv4 and IPv6)</t>
        </section>
      </section>

      <section title="Design of Operational Model">
        <t>The operational model contains both the overall statistics of BFD
        sessions running on the device and the per session operational
        information.</t>

        <t>The overall statistics of BFD sessions consist of number of BFD
        sessions, number of BFD sessions up etc. This information is available
        globally (i.e. for all BFD sessions) under the "bfd" node in <xref
        target="DESIGN-DATA"/> and also per type of forwarding path.</t>

        <t>For each BFD session, mainly three categories of operational items
        are shown. The fundamental information of a BFD session such as the
        local discriminator, remote discriminator and the capability of
        supporting demand detect mode are shown in the first category. The
        second category includes a BFD session running information, e.g. the
        remote BFD state and the diagnostic code received. Another example is
        the actual transmit interval between the control packets, which may be
        different from the desired minimum transmit interval configured, is
        shown in this category. Similar examples are actual received interval
        between the control packets and the actual transmit interval between
        the echo packets. The third category contains the detailed statistics
        of the session, e.g. when the session transitioned up/down and how
        long it has been in that state.</t>

        <t>For some session types, there may be more than 1 session on the
        virtual path to the destination. For example, with IP multi-hop and
        MPLS LSPs, there could be multiple BFD sessions from the source to the
        same destination to test the various paths (ECMP) to the destination.
        This is represented by having multiple "sessions" under each
        "session-group".</t>
      </section>

      <section title="Notifications">
        <t>This YANG model defines notifications to inform clients of BFD of
        important events detected during the protocol operation. Pair of local
        and remote discriminator identifies a BFD session on local system.
        Notifications also give more important details about BFD sessions;
        e.g. new state, time in previous state, network-instance and the
        reason that the BFD session state changed. The notifications are
        defined for each type of forwarding path but use groupings for common
        information.</t>
      </section>

      <section title="RPC Operations">
        <t>None.</t>
      </section>

      <section title="BFD top level hierarchy">
        <t>At the "bfd" node under control-plane-protocol, there is no
        configuration data, only operational data. The operational data
        consist of overall BFD session statistics, i.e. for BFD on all types
        of forwarding paths. The "bfd" node under control-plane-protocol can
        be used in a network device (top-level), or mounted in an LNE or in a
        network instance.</t>

        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
module: ietf-bfd
  augment /rt:routing/rt:control-plane-protocols/rt:control-plane-proto
col:
    +--rw bfd
       +--ro session-statistics
          +--ro session-count?              uint32
          +--ro session-up-count?           uint32
          +--ro session-down-count?         uint32
          +--ro session-admin-down-count?   uint32
                     ]]></artwork>
        </figure>
      </section>

      <section title="BFD IP single-hop hierarchy">
        <t>An "ip-sh" node is added under "bfd" node in
        control-plane-protocol. The configuration and operational data for
        each BFD IP single-hop session is under this "ip-sh" node. The "ip-sh"
        node can be used in a network device (top-level), or mounted in an LNE
        or in a network instance.</t>

        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
module: ietf-bfd-ip-sh
  augment /rt:routing/rt:control-plane-protocols/rt:control-plane-proto
col/bfd:bfd:
    +--rw ip-sh
       +--ro session-statistics
       |  +--ro session-count?              uint32
       |  +--ro session-up-count?           uint32
       |  +--ro session-down-count?         uint32
       |  +--ro session-admin-down-count?   uint32
       +--rw sessions* [interface dest-addr]
          +--rw interface                   if:interface-ref
          +--rw dest-addr                   inet:ip-address
          +--rw source-addr?                inet:ip-address
          +--rw local-multiplier?           multiplier
          +--rw (interval-config-type)?
          |  +--:(tx-rx-intervals)
          |  |  +--rw desired-min-tx-interval     uint32
          |  |  +--rw required-min-rx-interval    uint32
          |  +--:(single-interval)
          |     +--rw min-interval                uint32
          +--rw demand-enabled?             boolean {demand-mode}?
          +--rw admin-down?                 boolean
          +--rw authentication-parms! {authentication}?
          |  +--rw key-chain?           kc:key-chain-ref
          |  +--rw replay-protection?   identityref
          +--ro path-type?                  identityref
          +--ro ip-encapsulation?           boolean
          +--ro local-discriminator?        discriminator
          +--ro remote-discriminator?       discriminator
          +--ro remote-multiplier?          multiplier
          +--ro demand-capability?          boolean {demand-mode}?
          +--ro source-port?                inet:port-number
          +--ro dest-port?                  inet:port-number
          +--ro session-running
          |  +--ro session-index?                uint32
          |  +--ro local-state?                  state
          |  +--ro remote-state?                 state
          |  +--ro local-diagnostic?
          |  |       iana-bfd-types:diagnostic
          |  +--ro remote-diagnostic?
          |  |       iana-bfd-types:diagnostic
          |  +--ro remote-authenticated?         boolean
          |  +--ro remote-authentication-type?   iana-bfd-types:auth-ty
pe
          |  |       {authentication}?
          |  +--ro detection-mode?               enumeration
          |  +--ro negotiated-tx-interval?       uint32
          |  +--ro negotiated-rx-interval?       uint32
          |  +--ro detection-time?               uint32
          |  +--ro echo-tx-interval-in-use?      uint32 {echo-mode}?
          +--ro sesssion-statistics
             +--ro create-time?            yang:date-and-time
             +--ro last-down-time?         yang:date-and-time
             +--ro last-up-time?           yang:date-and-time
             +--ro down-count?             uint32
             +--ro admin-down-count?       uint32
             +--ro receive-packet-count?   uint64
             +--ro send-packet-count?      uint64
             +--ro receive-bad-packet?     uint64
             +--ro send-failed-packet?     uint64

  notifications:
    +---n singlehop-notification
       +--ro local-discr?                 discriminator
       +--ro remote-discr?                discriminator
       +--ro new-state?                   state
       +--ro state-change-reason?         iana-bfd-types:diagnostic
       +--ro time-of-last-state-change?   yang:date-and-time
       +--ro dest-addr?                   inet:ip-address
       +--ro source-addr?                 inet:ip-address
       +--ro session-index?               uint32
       +--ro path-type?                   identityref
       +--ro interface?                   if:interface-ref
       +--ro echo-enabled?                boolean

]]></artwork>
        </figure>
      </section>

      <section title="BFD IP multi-hop hierarchy">
        <t>An "ip-mh" node is added under the "bfd" node in
        cntrol-plane-protocol. The configuration and operational data for each
        BFD IP multi-hop session is under this "ip-mh" node. In the
        operational model we support multiple BFD multi-hop sessions per
        remote address (ECMP), the local discriminator is used as key. The
        "ip-mh" node can be used in a network device (top-level), or mounted
        in an LNE or in a network instance.</t>

        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
module: ietf-bfd-ip-mh
  augment /rt:routing/rt:control-plane-protocols/rt:control-plane-proto
col/bfd:bfd:
    +--rw ip-mh
       +--ro session-statistics
       |  +--ro session-count?              uint32
       |  +--ro session-up-count?           uint32
       |  +--ro session-down-count?         uint32
       |  +--ro session-admin-down-count?   uint32
       +--rw session-group* [source-addr dest-addr]
          +--rw source-addr                 inet:ip-address
          +--rw dest-addr                   inet:ip-address
          +--rw local-multiplier?           multiplier
          +--rw (interval-config-type)?
          |  +--:(tx-rx-intervals)
          |  |  +--rw desired-min-tx-interval     uint32
          |  |  +--rw required-min-rx-interval    uint32
          |  +--:(single-interval)
          |     +--rw min-interval                uint32
          +--rw demand-enabled?             boolean {demand-mode}?
          +--rw admin-down?                 boolean
          +--rw authentication-parms! {authentication}?
          |  +--rw key-chain?           kc:key-chain-ref
          |  +--rw replay-protection?   identityref
          +--rw tx-ttl?                     bfd-types:hops
          +--rw rx-ttl                      bfd-types:hops
          +--ro sessions*
             +--ro path-type?              identityref
             +--ro ip-encapsulation?       boolean
             +--ro local-discriminator?    discriminator
             +--ro remote-discriminator?   discriminator
             +--ro remote-multiplier?      multiplier
             +--ro demand-capability?      boolean {demand-mode}?
             +--ro source-port?            inet:port-number
             +--ro dest-port?              inet:port-number
             +--ro session-running
             |  +--ro session-index?                uint32
             |  +--ro local-state?                  state
             |  +--ro remote-state?                 state
             |  +--ro local-diagnostic?
             |  |       iana-bfd-types:diagnostic
             |  +--ro remote-diagnostic?
             |  |       iana-bfd-types:diagnostic
             |  +--ro remote-authenticated?         boolean
             |  +--ro remote-authentication-type?
             |  |       iana-bfd-types:auth-type {authentication}?
             |  +--ro detection-mode?               enumeration
             |  +--ro negotiated-tx-interval?       uint32
             |  +--ro negotiated-rx-interval?       uint32
             |  +--ro detection-time?               uint32
             |  +--ro echo-tx-interval-in-use?      uint32
             |          {echo-mode}?
             +--ro sesssion-statistics
                +--ro create-time?            yang:date-and-time
                +--ro last-down-time?         yang:date-and-time
                +--ro last-up-time?           yang:date-and-time
                +--ro down-count?             uint32
                +--ro admin-down-count?       uint32
                +--ro receive-packet-count?   uint64
                +--ro send-packet-count?      uint64
                +--ro receive-bad-packet?     uint64
                +--ro send-failed-packet?     uint64

  notifications:
    +---n multihop-notification
       +--ro local-discr?                 discriminator
       +--ro remote-discr?                discriminator
       +--ro new-state?                   state
       +--ro state-change-reason?         iana-bfd-types:diagnostic
       +--ro time-of-last-state-change?   yang:date-and-time
       +--ro dest-addr?                   inet:ip-address
       +--ro source-addr?                 inet:ip-address
       +--ro session-index?               uint32
       +--ro path-type?                   identityref
                     ]]></artwork>
        </figure>
      </section>

      <section title="BFD over LAG hierarchy">
        <t>A "lag" node is added under the "bfd" node in
        control-plane-protocol. The configuration and operational data for
        each BFD LAG session is under this "lag" node. The "lag" node can be
        used in a network device (top-level), or mounted in an LNE or in a
        network instance.</t>

        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
module: ietf-bfd-lag
  augment /rt:routing/rt:control-plane-protocols/rt:control-plane-proto
col/bfd:bfd:
    +--rw lag
       +--rw micro-bfd-ipv4-session-statistics
       |  +--ro session-statistics
       |     +--ro session-count?              uint32
       |     +--ro session-up-count?           uint32
       |     +--ro session-down-count?         uint32
       |     +--ro session-admin-down-count?   uint32
       +--rw micro-bfd-ipv6-session-statistics
       |  +--ro session-statistics
       |     +--ro session-count?              uint32
       |     +--ro session-up-count?           uint32
       |     +--ro session-down-count?         uint32
       |     +--ro session-admin-down-count?   uint32
       +--rw sessions* [lag-name]
          +--rw lag-name                    if:interface-ref
          +--rw ipv4-dest-addr?             inet:ipv4-address
          +--rw ipv6-dest-addr?             inet:ipv6-address
          +--rw local-multiplier?           multiplier
          +--rw (interval-config-type)?
          |  +--:(tx-rx-intervals)
          |  |  +--rw desired-min-tx-interval     uint32
          |  |  +--rw required-min-rx-interval    uint32
          |  +--:(single-interval)
          |     +--rw min-interval                uint32
          +--rw demand-enabled?             boolean {demand-mode}?
          +--rw admin-down?                 boolean
          +--rw authentication-parms! {authentication}?
          |  +--rw key-chain?           kc:key-chain-ref
          |  +--rw replay-protection?   identityref
          +--rw use-ipv4?                   boolean
          +--rw use-ipv6?                   boolean
          +--ro member-links* [member-link]
             +--ro member-link       if:interface-ref
             +--ro micro-bfd-ipv4
             |  +--ro path-type?              identityref
             |  +--ro ip-encapsulation?       boolean
             |  +--ro local-discriminator?    discriminator
             |  +--ro remote-discriminator?   discriminator
             |  +--ro remote-multiplier?      multiplier
             |  +--ro demand-capability?      boolean {demand-mode}?
             |  +--ro source-port?            inet:port-number
             |  +--ro dest-port?              inet:port-number
             |  +--ro session-running
             |  |  +--ro session-index?                uint32
             |  |  +--ro local-state?                  state
             |  |  +--ro remote-state?                 state
             |  |  +--ro local-diagnostic?
             |  |  |       iana-bfd-types:diagnostic
             |  |  +--ro remote-diagnostic?
             |  |  |       iana-bfd-types:diagnostic
             |  |  +--ro remote-authenticated?         boolean
             |  |  +--ro remote-authentication-type?
             |  |  |       iana-bfd-types:auth-type {authentication}?
             |  |  +--ro detection-mode?               enumeration
             |  |  +--ro negotiated-tx-interval?       uint32
             |  |  +--ro negotiated-rx-interval?       uint32
             |  |  +--ro detection-time?               uint32
             |  |  +--ro echo-tx-interval-in-use?      uint32
             |  |          {echo-mode}?
             |  +--ro sesssion-statistics
             |     +--ro create-time?            yang:date-and-time
             |     +--ro last-down-time?         yang:date-and-time
             |     +--ro last-up-time?           yang:date-and-time
             |     +--ro down-count?             uint32
             |     +--ro admin-down-count?       uint32
             |     +--ro receive-packet-count?   uint64
             |     +--ro send-packet-count?      uint64
             |     +--ro receive-bad-packet?     uint64
             |     +--ro send-failed-packet?     uint64
             +--ro micro-bfd-ipv6
                +--ro path-type?              identityref
                +--ro ip-encapsulation?       boolean
                +--ro local-discriminator?    discriminator
                +--ro remote-discriminator?   discriminator
                +--ro remote-multiplier?      multiplier
                +--ro demand-capability?      boolean {demand-mode}?
                +--ro source-port?            inet:port-number
                +--ro dest-port?              inet:port-number
                +--ro session-running
                |  +--ro session-index?                uint32
                |  +--ro local-state?                  state
                |  +--ro remote-state?                 state
                |  +--ro local-diagnostic?
                |  |       iana-bfd-types:diagnostic
                |  +--ro remote-diagnostic?
                |  |       iana-bfd-types:diagnostic
                |  +--ro remote-authenticated?         boolean
                |  +--ro remote-authentication-type?
                |  |       iana-bfd-types:auth-type {authentication}?
                |  +--ro detection-mode?               enumeration
                |  +--ro negotiated-tx-interval?       uint32
                |  +--ro negotiated-rx-interval?       uint32
                |  +--ro detection-time?               uint32
                |  +--ro echo-tx-interval-in-use?      uint32
                |          {echo-mode}?
                +--ro sesssion-statistics
                   +--ro create-time?            yang:date-and-time
                   +--ro last-down-time?         yang:date-and-time
                   +--ro last-up-time?           yang:date-and-time
                   +--ro down-count?             uint32
                   +--ro admin-down-count?       uint32
                   +--ro receive-packet-count?   uint64
                   +--ro send-packet-count?      uint64
                   +--ro receive-bad-packet?     uint64
                   +--ro send-failed-packet?     uint64

  notifications:
    +---n lag-notification
       +--ro local-discr?                 discriminator
       +--ro remote-discr?                discriminator
       +--ro new-state?                   state
       +--ro state-change-reason?         iana-bfd-types:diagnostic
       +--ro time-of-last-state-change?   yang:date-and-time
       +--ro dest-addr?                   inet:ip-address
       +--ro source-addr?                 inet:ip-address
       +--ro session-index?               uint32
       +--ro path-type?                   identityref
       +--ro lag-name?                    if:interface-ref
       +--ro member-link?                 if:interface-ref
                     ]]></artwork>
        </figure>
      </section>

      <section title="BFD over MPLS LSPs hierarchy">
        <t>An "mpls" node is added under the "bfd" node in
        control-plane-protocol. The configuration is per MPLS FEC under this
        "mpls" node. In the operational model we support multiple BFD sessions
        per MPLS FEC (ECMP), the local discriminator is used as key. The
        "mpls" node can be used in a network device (top-level), or mounted in
        an LNE or in a network instance.</t>

        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
module: ietf-bfd-mpls
  augment /rt:routing/rt:control-plane-protocols/rt:control-plane-proto
col/bfd:bfd:
    +--rw mpls
       +--ro session-statistics
       |  +--ro session-count?              uint32
       |  +--ro session-up-count?           uint32
       |  +--ro session-down-count?         uint32
       |  +--ro session-admin-down-count?   uint32
       +--rw egress
       |  +--rw enable?                     boolean
       |  +--rw local-multiplier?           multiplier
       |  +--rw (interval-config-type)?
       |  |  +--:(tx-rx-intervals)
       |  |  |  +--rw desired-min-tx-interval     uint32
       |  |  |  +--rw required-min-rx-interval    uint32
       |  |  +--:(single-interval)
       |  |     +--rw min-interval                uint32
       |  +--rw authentication-parms! {authentication}?
       |     +--rw key-chain?           kc:key-chain-ref
       |     +--rw replay-protection?   identityref
       +--rw session-group* [mpls-fec]
          +--rw mpls-fec                    inet:ip-prefix
          +--rw local-multiplier?           multiplier
          +--rw (interval-config-type)?
          |  +--:(tx-rx-intervals)
          |  |  +--rw desired-min-tx-interval     uint32
          |  |  +--rw required-min-rx-interval    uint32
          |  +--:(single-interval)
          |     +--rw min-interval                uint32
          +--rw demand-enabled?             boolean {demand-mode}?
          +--rw admin-down?                 boolean
          +--rw authentication-parms! {authentication}?
          |  +--rw key-chain?           kc:key-chain-ref
          |  +--rw replay-protection?   identityref
          +--ro sessions*
             +--ro path-type?              identityref
             +--ro ip-encapsulation?       boolean
             +--ro local-discriminator?    discriminator
             +--ro remote-discriminator?   discriminator
             +--ro remote-multiplier?      multiplier
             +--ro demand-capability?      boolean {demand-mode}?
             +--ro source-port?            inet:port-number
             +--ro dest-port?              inet:port-number
             +--ro session-running
             |  +--ro session-index?                uint32
             |  +--ro local-state?                  state
             |  +--ro remote-state?                 state
             |  +--ro local-diagnostic?
             |  |       iana-bfd-types:diagnostic
             |  +--ro remote-diagnostic?
             |  |       iana-bfd-types:diagnostic
             |  +--ro remote-authenticated?         boolean
             |  +--ro remote-authentication-type?
             |  |       iana-bfd-types:auth-type {authentication}?
             |  +--ro detection-mode?               enumeration
             |  +--ro negotiated-tx-interval?       uint32
             |  +--ro negotiated-rx-interval?       uint32
             |  +--ro detection-time?               uint32
             |  +--ro echo-tx-interval-in-use?      uint32
             |          {echo-mode}?
             +--ro sesssion-statistics
             |  +--ro create-time?            yang:date-and-time
             |  +--ro last-down-time?         yang:date-and-time
             |  +--ro last-up-time?           yang:date-and-time
             |  +--ro down-count?             uint32
             |  +--ro admin-down-count?       uint32
             |  +--ro receive-packet-count?   uint64
             |  +--ro send-packet-count?      uint64
             |  +--ro receive-bad-packet?     uint64
             |  +--ro send-failed-packet?     uint64
             +--ro mpls-dest-address?      inet:ip-address

  notifications:
    +---n mpls-notification
       +--ro local-discr?                 discriminator
       +--ro remote-discr?                discriminator
       +--ro new-state?                   state
       +--ro state-change-reason?         iana-bfd-types:diagnostic
       +--ro time-of-last-state-change?   yang:date-and-time
       +--ro dest-addr?                   inet:ip-address
       +--ro source-addr?                 inet:ip-address
       +--ro session-index?               uint32
       +--ro path-type?                   identityref
       +--ro mpls-dest-address?           inet:ip-address
                     ]]></artwork>
        </figure>
      </section>

      <section title="BFD over MPLS-TE hierarchy">
        <t><xref target="I-D.ietf-teas-yang-te">YANG Data Model for TE
        Topologies </xref> is augmented. BFD is configured per MPLS-TE tunnel,
        and BFD session operational data is provided per MPLS-TE LSP.</t>

        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
module: ietf-bfd-mpls-te
  augment /rt:routing/rt:control-plane-protocols/rt:control-plane-proto
col/bfd:bfd:
    +--rw mpls-te
       +--rw config
       |  +--rw egress
       |     +--rw enable?                     boolean
       |     +--rw local-multiplier?           multiplier
       |     +--rw (interval-config-type)?
       |     |  +--:(tx-rx-intervals)
       |     |  |  +--rw desired-min-tx-interval     uint32
       |     |  |  +--rw required-min-rx-interval    uint32
       |     |  +--:(single-interval)
       |     |     +--rw min-interval                uint32
       |     +--rw authentication-parms! {authentication}?
       |        +--rw key-chain?           kc:key-chain-ref
       |        +--rw replay-protection?   identityref
       +--ro oper
          +--ro session-statistics
             +--ro session-count?              uint32
             +--ro session-up-count?           uint32
             +--ro session-down-count?         uint32
             +--ro session-admin-down-count?   uint32
  augment /te:te/te:tunnels/te:tunnel:
    +--rw local-multiplier?           multiplier
    +--rw (interval-config-type)?
    |  +--:(tx-rx-intervals)
    |  |  +--rw desired-min-tx-interval     uint32
    |  |  +--rw required-min-rx-interval    uint32
    |  +--:(single-interval)
    |     +--rw min-interval                uint32
    +--rw demand-enabled?             boolean {demand-mode}?
    +--rw admin-down?                 boolean
    +--rw authentication-parms! {authentication}?
    |  +--rw key-chain?           kc:key-chain-ref
    |  +--rw replay-protection?   identityref
    +--rw encap?                      identityref
  augment /te:te/te:lsps-state/te:lsp:
    +--ro path-type?              identityref
    +--ro ip-encapsulation?       boolean
    +--ro local-discriminator?    discriminator
    +--ro remote-discriminator?   discriminator
    +--ro remote-multiplier?      multiplier
    +--ro demand-capability?      boolean {demand-mode}?
    +--ro source-port?            inet:port-number
    +--ro dest-port?              inet:port-number
    +--ro session-running
    |  +--ro session-index?                uint32
    |  +--ro local-state?                  state
    |  +--ro remote-state?                 state
    |  +--ro local-diagnostic?             iana-bfd-types:diagnostic
    |  +--ro remote-diagnostic?            iana-bfd-types:diagnostic
    |  +--ro remote-authenticated?         boolean
    |  +--ro remote-authentication-type?   iana-bfd-types:auth-type
    |  |       {authentication}?
    |  +--ro detection-mode?               enumeration
    |  +--ro negotiated-tx-interval?       uint32
    |  +--ro negotiated-rx-interval?       uint32
    |  +--ro detection-time?               uint32
    |  +--ro echo-tx-interval-in-use?      uint32 {echo-mode}?
    +--ro sesssion-statistics
    |  +--ro create-time?            yang:date-and-time
    |  +--ro last-down-time?         yang:date-and-time
    |  +--ro last-up-time?           yang:date-and-time
    |  +--ro down-count?             uint32
    |  +--ro admin-down-count?       uint32
    |  +--ro receive-packet-count?   uint64
    |  +--ro send-packet-count?      uint64
    |  +--ro receive-bad-packet?     uint64
    |  +--ro send-failed-packet?     uint64
    +--ro mpls-dest-address?      inet:ip-address

  notifications:
    +---n mpls-te-notification
       +--ro local-discr?                 discriminator
       +--ro remote-discr?                discriminator
       +--ro new-state?                   state
       +--ro state-change-reason?         iana-bfd-types:diagnostic
       +--ro time-of-last-state-change?   yang:date-and-time
       +--ro dest-addr?                   inet:ip-address
       +--ro source-addr?                 inet:ip-address
       +--ro session-index?               uint32
       +--ro path-type?                   identityref
       +--ro mpls-dest-address?           inet:ip-address
       +--ro tunnel-name?                 string
                     ]]></artwork>
        </figure>
      </section>

      <section title="Interaction with other YANG modules">
        <t><xref target="I-D.ietf-lime-yang-connectionless-oam">Generic YANG
        Data Model for Connectionless OAM protocols </xref> describes how the
        LIME connectionless OAM model could be extended to support BFD.</t>

        <t>Also, the operation of the BFD data model depends on configuration
        parameters that are defined in other YANG modules.</t>

        <section title="Module ietf-interfaces">
          <t>The following boolean configuration is defined in <xref
          target="RFC7223">A YANG Data Model for Interface Management </xref>:
          <list hangIndent="8" style="hanging">
              <t hangText="/if:interfaces/if:interface/if:enabled"><vspace/>If
              this configuration is set to "false", no BFD packets can be
              transmitted or received on that interface.</t>
            </list></t>
        </section>

        <section title="Module ietf-ip">
          <t>The following boolean configuration is defined in <xref
          target="RFC7277">A YANG Data Model for IP Management </xref>: <list
              hangIndent="8" style="hanging">
              <t
              hangText="/if:interfaces/if:interface/ip:ipv4/ip:enabled"><vspace/>If
              this configuration is set to "false", no BFD IPv4 packets can be
              transmitted or received on that interface.</t>

              <t
              hangText="/if:interfaces/if:interface/ip:ipv4/ip:forwarding"><vspace/>If
              this configuration is set to "false", no BFD IPv4 packets can be
              transmitted or received on that interface.</t>

              <t
              hangText="/if:interfaces/if:interface/ip:ipv6/ip:enabled"><vspace/>If
              this configuration is set to "false", no BFD IPv6 packets can be
              transmitted or received on that interface.</t>

              <t
              hangText="/if:interfaces/if:interface/ip:ipv6/ip:forwarding"><vspace/>If
              this configuration is set to "false", no BFD IPv6 packets can be
              transmitted or received on that interface.</t>
            </list></t>
        </section>

        <section title="Module ietf-mpls">
          <t>The following boolean configuration is defined in <xref
          target="I-D.ietf-mpls-base-yang">A YANG Data Model for MPLS Base
          </xref>: <list hangIndent="8" style="hanging">
              <t
              hangText="/rt:routing/mpls:mpls/mpls:interface/mpls:config/mpls:enabled"><vspace/>If
              this configuration is set to "false", no BFD MPLS packets can be
              transmitted or received on that interface.</t>
            </list></t>
        </section>

        <section title="Module ietf-te">
          <t>The following configuration is defined in the "ietf-te" YANG
          module <xref target="I-D.ietf-teas-yang-te">YANG Data Model for TE
          Topology </xref>: <list hangIndent="8" style="hanging">
              <t
              hangText="/ietf-te:te/ietf-te:tunnels/ietf-te:tunnel/ietf-te:config/ietf-te:admin-status"><vspace/>If
              this configuration is not set to "state-up", no BFD MPLS packets
              can be transmitted or received on that tunnel.</t>
            </list></t>
        </section>
      </section>

      <section title="IANA BFD YANG Module">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[<CODE BEGINS> file "iana-bfd-types@2017-10-30.yang"

module iana-bfd-types {
  namespace "urn:ietf:params:xml:ns:yang:iana-bfd-types";

  prefix "iana-bfd-types";

  organization "IANA";

  contact
    "        Internet Assigned Numbers Authority

    Postal: ICANN
            4676 Admiralty Way, Suite 330
            Marina del Rey, CA 90292

    Tel:    +1 310 823 9358
    <mailto:iana@iana.org>";

  description
    "This module contains a collection of YANG data types
     considered defined by IANA and used for BFD.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference "RFC XXXX: IANA BFD YANG Data Types.";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note


  typedef diagnostic {
    type enumeration {
      enum none {
        value 0;
        description "None";
      }
      enum control-expiry {
        value 1;
        description "Control timer expiry";
      }
      enum echo-failed {
        value 2;
        description "Echo failure";
      }
      enum neighbor-down {
        value 3;
        description "Neighbor down";
      }
      enum forwarding-reset {
        value 4;
        description "Forwarding reset";
      }
      enum path-down {
        value 5;
        description "Path down";
      }
      enum concatenated-path-down {
        value 6;
        description "Concatenated path down";
      }
      enum admin-down {
        value 7;
        description "Admin down";
      }
      enum reverse-concatenated-path-down {
        value 8;
        description "Reverse concatenated path down";
      }
      enum mis-connectivity-defect {
        value 9;
        description "Mis-connectivity defect as specified in RFC6428";
      }
    }
    description
      "BFD diagnostic as defined in RFC5880. Range is 0 to 31.";
  }

  typedef auth-type {
    type enumeration {
      enum reserved {
        value 0;
        description "Reserved";
      }
      enum simple-password {
        value 1;
        description "Simple password";
      }
      enum keyed-md5 {
        value 2;
        description "Keyed MD5";
      }
      enum meticulous-keyed-md5 {
        value 3;
        description "Meticulous keyed MD5";
      }
      enum keyed-sha1 {
        value 4;
        description "Keyed SHA1";
      }
      enum meticulous-keyed-sha1 {
        value 5;
        description "Meticulous keyed SHA1";
      }
    }
    description
      "BFD authentication type as defined in RFC5880. Range is 0 to
       255.";
  }
}

<CODE ENDS>
        ]]></artwork>
        </figure>
      </section>

      <section anchor="BFD-TYPES" title="BFD types YANG Module">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-bfd-types@2017-10-30.yang"

module ietf-bfd-types {
  namespace "urn:ietf:params:xml:ns:yang:ietf-bfd-types";

  prefix "bfd-types";

  import iana-bfd-types {
    prefix "iana-bfd-types";
  }

  import ietf-inet-types {
    prefix "inet";
  }

  import ietf-yang-types {
    prefix "yang";
  }

  import ietf-routing {
    prefix "rt";
  }

  import ietf-key-chain {
    prefix "kc";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:  Reshad Rahman (rrahman@cisco.com),
               Lianshu Zheng (vero.zheng@huawei.com),
               Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains a collection of BFD specific YANG data type
     definitions, as per RFC5880.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference "RFC XXXX: A YANG data model for BFD";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  identity bfdv1 {
    base "rt:control-plane-protocol";
    description "BFD protocol version 1 as per RFC5880.";
  }

  typedef discriminator {
    type uint32 {
      range 1..4294967295;
    }
    description "BFD discriminator";
  }

  typedef state {
    type enumeration {
      enum adminDown {
        value 0;
        description "admindown";
      }
      enum down {
        value 1;
        description "down";
      }
      enum init {
        value 2;
        description "init";
      }
      enum up {
        value 3;
        description "up";
      }
    }
    description "BFD state as defined in RFC5880";
  }

  typedef multiplier {
    type uint8 {
      range 1..255;
    }
    description "Multiplier";
  }

  typedef hops {
    type uint8 {
      range 1..255;
    }
    description
      "This corresponds to Time To Live for IPv4 and corresponds to hop
       limit for IPv6";
  }

  /*
   * Identity definitions
   */
  identity path-type {
    description
      "Base identity for BFD path type. The session type indicates
       the type of path on which BFD is running";
  }
  identity path-ip-sh {
    base path-type;
    description "BFD on IP single hop";
  }
  identity path-ip-mh {
    base path-type;
    description "BFD on IP multi hop";
  }
  identity path-mpls-te {
    base path-type;
    description "BFD on MPLS Traffic Engineering";
  }
  identity path-mpls-lsp {
    base path-type;
    description "BFD on MPLS Label Switched Path";
  }
  identity path-lag {
    base path-type;
    description "Micro-BFD on LAG member links";
  }

  identity encap-type {
    description
      "Base identity for BFD encapsulation type.";
  }
  identity encap-ip {
    base encap-type;
    description "BFD with IP encapsulation.";
  }

  identity auth-replay-protection {
    description
      "Base identity for BFD authentication replay protection. " +
      "See section 6.7 of RFC5880.";
  }
  identity auth-replay-protection-non-meticulous {
    base auth-replay-protection;
    description "Non-meticulous (see section 6.7.3 of RFC5880)";
  }
  identity auth-replay-protection-meticulous {
    base auth-replay-protection;
    description "Meticulous (see section 6.7.3 of RFC5880)";
  }

  /*
   * Feature definitions.
   */
  feature authentication {
	  description "BFD authentication supported";
	}

  feature demand-mode {
    description "BFD demand mode supported";
  }

  feature echo-mode {
    description "BFD echo mode supported";
  }

  /*
   * Groupings
   */
  grouping auth-parms {
    description
      "Grouping for BFD authentication parameters
       (see section 6.7 of RFC5880).";
    container authentication-parms {
      if-feature authentication;
      presence
        "Enables BFD authentication (see section 6.7 of RFC5880).";
      description "Parameters for BFD authentication";

      leaf key-chain {
        type kc:key-chain-ref;
        description "Name of key-chain";
      }

      leaf replay-protection {
        type identityref {
          base auth-replay-protection;
        }
        description
          "Protection against replays";
      }
    }
  }

  grouping base-cfg-parms {
    description "BFD grouping for base config parameters";
    leaf local-multiplier {
      type multiplier;
      default 3;
      description "Multiplier transmitted by local system";
    }

    choice interval-config-type {
      description
        "Two interval values or 1 value used for both tx and rx";
      case tx-rx-intervals {
        leaf desired-min-tx-interval {
          type uint32;
          units microseconds;
          mandatory true;
          description
            "Desired minimum transmit interval of control packets";
        }

        leaf required-min-rx-interval {
          type uint32;
          units microseconds;
          mandatory true;
          description
            "Required minimum receive interval of control packets";
        }
      }
      case single-interval {
        leaf min-interval {
          type uint32;
          units microseconds;
          mandatory true;
          description
            "Desired minimum transmit interval and required " +
            "minimum receive interval of control packets";
        }
      }
    }
  }

  grouping client-cfg-parms {
    description
      "BFD grouping for config parameters
       used by clients of BFD, e.g. IGP or MPLS";

    leaf enable {
      type boolean;
      default false;
      description
        "Indicates whether the BFD is enabled.";
    }
    uses base-cfg-parms;
  }

  grouping common-cfg-parms {
    description
      "BFD grouping for common config parameters";

    uses base-cfg-parms;

    leaf demand-enabled {
      if-feature demand-mode;
      type boolean;
      default false;
      description
        "To enable demand mode";
    }

    leaf admin-down {
      type boolean;
      default false;
      description
        "Is the BFD session administratively down";
    }
    uses auth-parms;
  }

  grouping all-session {
    description "BFD session operational information";
    leaf path-type {
      type identityref {
        base path-type;
      }
      config "false";
      description
        "BFD session type, this indicates the path type that BFD is
        running on";
    }
    leaf ip-encapsulation {
      type boolean;
      config "false";
      description "Whether BFD encapsulation uses IP";
    }
    leaf local-discriminator {
      type discriminator;
      config "false";
      description "Local discriminator";
    }
    leaf remote-discriminator {
      type discriminator;
      config "false";
      description "Remote discriminator";
    }
    leaf remote-multiplier {
      type multiplier;
      config "false";
      description "Remote multiplier";
    }
    leaf demand-capability {
      if-feature demand-mode;
      type boolean;
      config "false";
      description "Local demand mode capability";
    }
    leaf source-port {
      when "../ip-encapsulation = 'true'" {
        description
          "Source port valid only when IP encapsulation is used";
      }
      type inet:port-number;
      config "false";
      description "Source UDP port";
    }
    leaf dest-port {
      when "../ip-encapsulation = 'true'" {
        description
          "Destination port valid only when IP encapsulation is used";
      }
      type inet:port-number;
      config "false";
      description "Destination UDP port";
    }

    container session-running {
      config "false";
      description "BFD session running information";
      leaf session-index {
        type uint32;
        description
          "An index used to uniquely identify BFD sessions";
      }
      leaf local-state {
        type state;
        description "Local state";
      }
      leaf remote-state {
        type state;
        description "Remote state";
      }
      leaf local-diagnostic {
        type iana-bfd-types:diagnostic;
        description "Local diagnostic";
      }
      leaf remote-diagnostic {
        type iana-bfd-types:diagnostic;
        description "Remote diagnostic";
      }
      leaf remote-authenticated {
        type boolean;
        description
          "Indicates whether incoming BFD control packets are
          authenticated";
      }
      leaf remote-authentication-type {
        when "../remote-authenticated = 'true'" {
          description
            "Only valid when incoming BFD control packets are
             authenticated";
        }
        if-feature authentication;
        type iana-bfd-types:auth-type;
        description
          "Authentication type of incoming BFD control packets";
      }
      leaf detection-mode {
        type enumeration {
          enum async-with-echo {
            value "1";
            description "Async with echo";
          }
          enum async-without-echo {
            value "2";
            description "Async without echo";
          }
          enum demand-with-echo {
            value "3";
            description "Demand with echo";
          }
          enum demand-without-echo {
            value "4";
            description "Demand without echo";
          }
        }
        description "Detection mode";
      }
      leaf negotiated-tx-interval {
        type uint32;
        units microseconds;
        description "Negotiated transmit interval";
      }
      leaf negotiated-rx-interval {
        type uint32;
        units microseconds;
        description "Negotiated receive interval";
      }
      leaf detection-time {
        type uint32;
        units microseconds;
        description "Detection time";
      }
      leaf echo-tx-interval-in-use {
        when "../../path-type = 'bfd-types:path-ip-sh'" {
          description
            "Echo is supported for IP single-hop only.";
        }
        if-feature echo-mode;
        type uint32;
        units microseconds;
        description "Echo transmit interval in use";
      }
    }

    container sesssion-statistics {
      config "false";
      description "BFD per-session statistics";

      leaf create-time {
        type yang:date-and-time;
        description
          "Time and date when session was created";
      }
      leaf last-down-time {
        type yang:date-and-time;
        description
          "Time and date of last time the session went down";
      }
      leaf last-up-time {
        type yang:date-and-time;
        description
          "Time and date of last time the session went up";
      }
      leaf down-count {
        type uint32;
        description "Session Down Count";
      }
      leaf admin-down-count {
        type uint32;
        description "Session Admin-Down Count";
      }
      leaf receive-packet-count {
        type uint64;
        description "Received Packet Count";
      }
      leaf send-packet-count {
        type uint64;
        description "Sent Packet Count";
      }
      leaf receive-bad-packet {
        type uint64;
        description "Received bad packet count";
      }
      leaf send-failed-packet {
        type uint64;
        description "Packet Failed to Send Count";
      }
    }
  }

  grouping session-statistics {
    description "Grouping for session counters";
    container session-statistics {
      config false;
      description "BFD session counters";
      leaf session-count {
        type uint32;
        description "Number of sessions";
      }
      leaf session-up-count {
        type uint32;
        description "Count of sessions which are up";
      }
      leaf session-down-count {
        type uint32;
        description "Count of sessions which are down";
      }
      leaf session-admin-down-count {
        type uint32;
        description "Count of sessions which are admin-down";
      }
    }
  }

  grouping notification-parms {
    description
      "This group describes common parameters that will be sent " +
      "as part of BFD notification";

    leaf local-discr {
      type discriminator;
      description "BFD local discriminator";
    }

    leaf remote-discr {
      type discriminator;
      description "BFD remote discriminator";
    }

    leaf new-state {
      type state;
      description "Current BFD state";
    }

    leaf state-change-reason {
      type iana-bfd-types:diagnostic;
      description "BFD state change reason";
    }

    leaf time-of-last-state-change {
      type yang:date-and-time;
      description
        "Calendar time of previous state change";
    }

    leaf dest-addr {
      type inet:ip-address;
      description "BFD peer address";
    }

    leaf source-addr {
      type inet:ip-address;
      description "BFD local address";
    }

    leaf session-index {
      type uint32;
      description "An index used to uniquely identify BFD sessions";
    }

    leaf path-type {
      type identityref {
        base path-type;
      }
      description "BFD path type";
    }
  }
}

<CODE ENDS>
        ]]></artwork>
        </figure>
      </section>

      <section title="BFD top-level YANG Module">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-bfd@2017-10-30.yang"

module ietf-bfd {
  namespace "urn:ietf:params:xml:ns:yang:ietf-bfd";

  prefix "bfd";

  import ietf-bfd-types {
    prefix "bfd-types";
  }

  import ietf-routing {
    prefix "rt";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:  Reshad Rahman (rrahman@cisco.com),
               Lianshu Zheng (vero.zheng@huawei.com),
               Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains the YANG definition for BFD parameters as
     per RFC5880.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference "RFC XXXX: A YANG data model for BFD";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol" {
     when "rt:type = 'bfd-types:bfdv1'" {
      description
        "This augmentation is only valid for a control-plane protocol
         instance of BFD (type 'bfdv1').";
    }
    description "BFD augmentation.";

    container bfd {
      description "BFD top level container";

      uses bfd-types:session-statistics;
    }
  }
}

<CODE ENDS>
        ]]></artwork>
        </figure>
      </section>

      <section title="BFD IP single-hop YANG Module">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-bfd-ip-sh@2017-10-30.yang"

module ietf-bfd-ip-sh {
  namespace "urn:ietf:params:xml:ns:yang:ietf-bfd-ip-sh";

  prefix "bfd-ip-sh";

  import ietf-bfd-types {
    prefix "bfd-types";
  }

  import ietf-bfd {
    prefix "bfd";
  }

  import ietf-interfaces {
    prefix "if";
  }

  import ietf-inet-types {
    prefix "inet";
  }

  import ietf-routing {
    prefix "rt";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:  Reshad Rahman (rrahman@cisco.com),
               Lianshu Zheng (vero.zheng@huawei.com),
               Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains the YANG definition for BFD IP single-hop
     as per RFC5881.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference "RFC XXXX: A YANG data model for BFD IP single-hop";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/bfd:bfd" {
    description "BFD augmentation for IP single-hop";
    container ip-sh {
      description "BFD IP single-hop top level container";

      uses bfd-types:session-statistics;

      list sessions {
        key "interface dest-addr";
        description "List of IP single-hop sessions";
        leaf interface {
          type if:interface-ref;
          description
            "Interface on which the BFD session is running.";
        }
        leaf dest-addr {
          type inet:ip-address;
          description "IP address of the peer";
        }
        leaf source-addr {
          type inet:ip-address;
          description "Local address";
        }

        uses bfd-types:common-cfg-parms;

        uses bfd-types:all-session;
      }
    }
  }

  notification singlehop-notification {
    description
      "Notification for BFD single-hop session state change. An " +
      "implementation may rate-limit notifications, e.g. when a" +
      "session is continuously changing state.";

    uses bfd-types:notification-parms;

    leaf interface {
      type if:interface-ref;
      description "Interface to which this BFD session belongs to";
    }

    leaf echo-enabled {
      type boolean;
      description "Was echo enabled for BFD";
    }
  }

}

<CODE ENDS>
        ]]></artwork>
        </figure>
      </section>

      <section title="BFD IP multi-hop YANG Module">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-bfd-ip-mh@2017-10-30.yang"

module ietf-bfd-ip-mh {
  namespace "urn:ietf:params:xml:ns:yang:ietf-bfd-ip-mh";
  // replace with IANA namespace when assigned
  prefix "bfd-ip-mh";

  import ietf-bfd-types {
    prefix "bfd-types";
  }

  import ietf-bfd {
    prefix "bfd";
  }

  import ietf-inet-types {
    prefix "inet";
  }

  import ietf-routing {
    prefix "rt";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:  Reshad Rahman (rrahman@cisco.com),
               Lianshu Zheng (vero.zheng@huawei.com),
               Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains the YANG definition for BFD IP multi-hop
     as per RFC5883.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference "RFC XXXX: A YANG data model for BFD IP multi-hop";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/bfd:bfd" {
    description "BFD augmentation for IP multi-hop";
    container ip-mh {
      description "BFD IP multi-hop top level container";

      uses bfd-types:session-statistics;

      list session-group {
        key "source-addr dest-addr";
	      description
	        "Group of BFD IP multi-hop sessions (for ECMP). A " +
          "group of sessions is between 1 source and 1  " +
          "destination, each session has a different field " +
          "in UDP/IP hdr for ECMP.";

        leaf source-addr {
          type inet:ip-address;
          description
            "Local IP address";
        }
        leaf dest-addr {
          type inet:ip-address;
          description
            "IP address of the peer";
        }
        uses bfd-types:common-cfg-parms;

        leaf tx-ttl {
          type bfd-types:hops;
          default 255;
          description "Hop count of outgoing BFD control packets";
        }
        leaf rx-ttl {
          type bfd-types:hops;
          mandatory true;
          description
            "Minimum allowed hop count value for incoming BFD control
             packets. Control packets whose hop count is lower than this
	           value are dropped.";
        }
        list sessions {
	        config false;
          description
            "The multiple BFD sessions between a source and a " +
            "destination.";
          uses bfd-types:all-session;
        }
      }
    }
  }

  notification multihop-notification {
    description
      "Notification for BFD multi-hop session state change. An " +
      "implementation may rate-limit notifications, e.g. when a" +
      "session is continuously changing state.";

    uses bfd-types:notification-parms;
  }
}

<CODE ENDS>
        ]]></artwork>
        </figure>
      </section>

      <section title="BFD over LAG YANG Module">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-bfd-lag@2017-10-30.yang"

module ietf-bfd-lag {
  namespace "urn:ietf:params:xml:ns:yang:ietf-bfd-lag";
  // replace with IANA namespace when assigned
  prefix "bfd-lag";

  import ietf-bfd-types {
    prefix "bfd-types";
  }

  import ietf-bfd {
    prefix "bfd";
  }

  import ietf-interfaces {
    prefix "if";
  }

  import ietf-inet-types {
    prefix "inet";
  }

  import ietf-routing {
    prefix "rt";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:  Reshad Rahman (rrahman@cisco.com),
               Lianshu Zheng vero.zheng@huawei.com),
               Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains the YANG definition for BFD over LAG
     interfaces as per RFC7130.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference "RFC XXXX: A YANG data model for BFD over LAG";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/bfd:bfd" {
    description "BFD augmentation for LAG";
    container lag {
      description "BFD over LAG top level container";

      container micro-bfd-ipv4-session-statistics {
        description "Micro-BFD IPv4 session counters";
        uses bfd-types:session-statistics;
      }
      container micro-bfd-ipv6-session-statistics {
        description "Micro-BFD IPv6 session counters";
        uses bfd-types:session-statistics;
      }

      list sessions {
        key "lag-name";
        description "A LAG interface on which BFD is running";
        leaf lag-name {
          type if:interface-ref ;
          description "Name of the LAG";
        }
        leaf ipv4-dest-addr {
          type inet:ipv4-address;
          description
            "IPv4 address of the peer, for IPv4 micro-BFD.";
        }
        leaf ipv6-dest-addr {
          type inet:ipv6-address;
          description
            "IPv6 address of the peer, for IPv6 micro-BFD.";
        }
        uses bfd-types:common-cfg-parms;

        leaf use-ipv4 {
          type boolean;
          description "Using IPv4 micro-BFD.";
        }
        leaf use-ipv6 {
          type boolean;
          description "Using IPv6 micro-BFD.";
        }

        list member-links {
          key "member-link";
	  config false;
          description
            "Micro-BFD over LAG. This represents one member link";

          leaf member-link {
            type if:interface-ref;
            description
              "Member link on which micro-BFD is running";
          }
          container micro-bfd-ipv4 {
            when "../../use-ipv4 = 'true'" {
              description "Needed only if IPv4 is used.";
            }
            description
              "Micro-BFD IPv4 session state on member link";
            uses bfd-types:all-session;
          }
          container micro-bfd-ipv6 {
            when "../../use-ipv6 = 'true'" {
              description "Needed only if IPv6 is used.";
            }
            description
              "Micro-BFD IPv6 session state on member link";
            uses bfd-types:all-session;
          }
        }
      }
    }
  }

  notification lag-notification {
    description
      "Notification for BFD over LAG session state change. " +
      "An implementation may rate-limit notifications, e.g. when a" +
      "session is continuously changing state.";

    uses bfd-types:notification-parms;

    leaf lag-name {
      type if:interface-ref;
      description "LAG interface name";
    }

    leaf member-link {
      type if:interface-ref;
      description "Member link on which BFD is running";
    }
  }
}

<CODE ENDS>
        ]]></artwork>
        </figure>
      </section>

      <section title="BFD over MPLS YANG Module">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-bfd-mpls@2017-10-30.yang"

module ietf-bfd-mpls {
  namespace "urn:ietf:params:xml:ns:yang:ietf-bfd-mpls";
  // replace with IANA namespace when assigned
  prefix "bfd-mpls";

  import ietf-bfd-types {
    prefix "bfd-types";
  }

  import ietf-bfd {
    prefix "bfd";
  }

  import ietf-inet-types {
    prefix "inet";
  }

  import ietf-routing {
    prefix "rt";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:   Reshad Rahman (rrahman@cisco.com),
                Lianshu Zheng (vero.zheng@huawei.com),
                Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains the YANG definition for BFD parameters for
     MPLS LSPs as per RFC5884.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference "RFC XXXX: A YANG data model for BFD over MPLS LSPs";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  identity encap-gach {
    base bfd-types:encap-type;
    description
      "BFD with G-ACh encapsulation as per RFC5586.";
  }

  identity encap-ip-gach {
    base bfd-types:encap-type;
    description
      "BFD with IP and G-ACh encapsulation as per RFC5586.";
  }

  grouping encap-cfg {
    description "Configuration for BFD encapsulation";

    leaf encap {
      type identityref {
        base bfd-types:encap-type;
      }
      default bfd-types:encap-ip;
      description "BFD encapsulation";
    }
  }

  grouping mpls-dest-address {
    description "Destination address as per RFC5884";

    leaf mpls-dest-address {
      type inet:ip-address;
      config "false";
      description
        "Destination address as per RFC5884.
         Needed if IP encapsulation is used";
    }
  }


  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/bfd:bfd" {
    description "BFD augmentation for MPLS";
    container mpls {
      description "BFD MPLS top level container";

      uses bfd-types:session-statistics;

      container egress {
        description "Egress configuration";

        uses bfd-types:client-cfg-parms;

        uses bfd-types:auth-parms;
      }

      list session-group {
        key "mpls-fec";
        description
          "Group of BFD MPLS sessions (for ECMP). A group of " +
          "sessions is for 1 FEC, each session has a different " +
          "field in UDP/IP hdr for ECMP.";
        leaf mpls-fec {
          type inet:ip-prefix;
          description "MPLS FEC";
        }

        uses bfd-types:common-cfg-parms;

        list sessions {
	        config false;
          description
            "The BFD sessions for an MPLS FEC. Local " +
            "discriminator is unique for each session in the " +
            "group.";
          uses bfd-types:all-session;

          uses bfd-mpls:mpls-dest-address;
        }
      }
    }
  }

  notification mpls-notification {
    description
      "Notification for BFD over MPLS FEC session state change. " +
      "An implementation may rate-limit notifications, e.g. when a" +
      "session is continuously changing state.";

    uses bfd-types:notification-parms;

    leaf mpls-dest-address {
      type inet:ip-address;
      description
        "Destination address as per RFC5884.
         Needed if IP encapsulation is used";
    }
  }
}

<CODE ENDS>
        ]]></artwork>
        </figure>
      </section>

      <section title="BFD over MPLS-TE YANG Module">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-bfd-mpls-te@2017-10-30.yang"

module ietf-bfd-mpls-te {
  namespace "urn:ietf:params:xml:ns:yang:ietf-bfd-mpls-te";
  // replace with IANA namespace when assigned
  prefix "bfd-mpls-te";

  import ietf-bfd-types {
    prefix "bfd-types";
  }

  import ietf-bfd {
    prefix "bfd";
  }

  import ietf-bfd-mpls {
    prefix "bfd-mpls";
  }

  import ietf-te {
    prefix "te";
  }

  import ietf-routing {
    prefix "rt";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:  Reshad Rahman (rrahman@cisco.com),
               Lianshu Zheng (vero.zheng@huawei.com),
               Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains the YANG definition for BFD parameters for
     MPLS Traffic Engineering as per RFC5884.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference "RFC XXXX: A YANG data model for BFD over MPLS-TE";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/bfd:bfd" {
    description "BFD augmentation for MPLS-TE";
    container mpls-te {
      description "BFD MPLS-TE top level container";

      container config {
        description "BFD MPLS-TE configuration container";

        container egress {
          description "Egress configuration";

          uses bfd-types:client-cfg-parms;

          uses bfd-types:auth-parms;
        }
      }

      container oper {
        config "false";
        description "BFD operational container";
        uses bfd-types:session-statistics;
      }
    }
  }

  augment "/te:te/te:tunnels/te:tunnel" {
    description "BFD configuration on MPLS-TE tunnel.";

    uses bfd-types:common-cfg-parms;

    uses bfd-mpls:encap-cfg;
  }

  augment "/te:te/te:lsps-state/te:lsp" {
    when "/te:te/te:lsps-state/te:lsp/te:origin-type != 'transit'" {
      description "BFD information not needed at transit points";
    }
    description "BFD state information on MPLS-TE LSP.";

    uses bfd-types:all-session;

    uses bfd-mpls:mpls-dest-address;
  }


  notification mpls-te-notification {
    description
      "Notification for BFD over MPLS-TE session state change. " +
      "An implementation may rate-limit notifications, e.g. when a" +
      "session is continuously changing state.";

    uses bfd-types:notification-parms;

    uses bfd-mpls:mpls-dest-address;

    leaf tunnel-name {
      type string;
      description "MPLS-TE tunnel on which BFD was running.";
    }
  }
}

<CODE ENDS>
        ]]></artwork>
        </figure>
      </section>

      <section title="Security Considerations">
        <t>The YANG module defined in this memo is designed to be accessed via
        the NETCONF protocol [RFC6241]. The lowest NETCONF layer is the secure
        transport layer and the mandatory to implement secure transport is SSH
        [RFC6242]. The NETCONF access control model [RFC6536] provides the
        means to restrict access for particular NETCONF users to a
        pre-configured subset of all available NETCONF protocol operations and
        content.</t>

        <t>The YANG module has writeable data nodes which can be used for
        creation of BFD sessions and modification of BFD session parameters.
        The system should "police" creation of BFD sessions to prevent new
        sessions from causing existing BFD sessions to fail. For BFD session
        modification, the BFD protocol has mechanisms in place which allow for
        in service modification.</t>
      </section>

      <section title="IANA Considerations">
        <t>The IANA is requested to as assign a new namespace URI from the
        IETF XML registry.</t>

        <t>This document registers the following namesace URIs in the IETF XML
        registry <xref target="RFC3688"/>:</t>

        <t/>

        <t>--------------------------------------------------------------------</t>

        <t>URI: urn:ietf:params:xml:ns:yang:ietf-bfd</t>

        <t>Registrant Contact: The IESG.</t>

        <t>XML: N/A, the requested URI is an XML namespace.</t>

        <t>--------------------------------------------------------------------</t>

        <t/>

        <t>--------------------------------------------------------------------</t>

        <t>URI: urn:ietf:params:xml:ns:yang:ietf-bfd-ip-sh</t>

        <t>Registrant Contact: The IESG.</t>

        <t>XML: N/A, the requested URI is an XML namespace.</t>

        <t>--------------------------------------------------------------------</t>

        <t/>

        <t>--------------------------------------------------------------------</t>

        <t>URI: urn:ietf:params:xml:ns:yang:ietf-bfd-mh</t>

        <t>Registrant Contact: The IESG.</t>

        <t>XML: N/A, the requested URI is an XML namespace.</t>

        <t>--------------------------------------------------------------------</t>

        <t/>

        <t>--------------------------------------------------------------------</t>

        <t>URI: urn:ietf:params:xml:ns:yang:ietf-bfd-lag</t>

        <t>Registrant Contact: The IESG.</t>

        <t>XML: N/A, the requested URI is an XML namespace.</t>

        <t>--------------------------------------------------------------------</t>

        <t/>

        <t>--------------------------------------------------------------------</t>

        <t>URI: urn:ietf:params:xml:ns:yang:ietf-bfd-mpls</t>

        <t>Registrant Contact: The IESG.</t>

        <t>XML: N/A, the requested URI is an XML namespace.</t>

        <t>--------------------------------------------------------------------</t>

        <t/>

        <t>--------------------------------------------------------------------</t>

        <t>URI: urn:ietf:params:xml:ns:yang:ietf-bfd-mpls-te</t>

        <t>Registrant Contact: The IESG.</t>

        <t>XML: N/A, the requested URI is an XML namespace.</t>

        <t>--------------------------------------------------------------------</t>

        <section title="IANA-Maintained iana-bfd-types module">
          <t>This document defines the initial version of the IANA-maintained
          iana-bfd-types YANG module.</t>

          <t>The iana-bfd-types YANG module is intended to reflect the "BFD
          Diagnostic Codes" registry and "BFD Authentication Types" registry
          at
          https://www.iana.org/assignments/bfd-parameters/bfd-parameters.xhtml</t>
        </section>
      </section>

      <section title="Acknowledgements">
        <t>We would also like to thank Nobo Akiya and Jeff Haas for their
        encouragement on this work. We would also like to thank Rakesh Gandhi
        and Tarek Saad for their help on the MPLS-TE model. We would also like
        to thank Acee Lindem for his guidance.</t>
      </section>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.3688"?>

      <?rfc include='reference.RFC.5880'?>

      <?rfc include='reference.RFC.5881'?>

      <?rfc include='reference.RFC.5882'?>

      <?rfc include='reference.RFC.5883'?>

      <?rfc include='reference.RFC.5884'?>

      <?rfc include='reference.RFC.7130'?>

      <?rfc include='reference.RFC.5885'?>

      <?rfc include='reference.RFC.5586'?>

      <?rfc include='reference.RFC.8022'?>

      <?rfc include='reference.RFC.7223'?>

      <?rfc include='reference.RFC.7277'?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.I-D.ietf-rtgwg-ni-model"?>

      <?rfc include="reference.RFC.8177"?>

      <?rfc include="reference.I-D.ietf-teas-yang-te"?>

      <?rfc include="reference.I-D.ietf-netmod-schema-mount"?>

      <?rfc include="reference.I-D.ietf-rtgwg-device-model"?>

      <?rfc include="reference.I-D.ietf-rtgwg-lne-model"?>

      <?rfc include="reference.I-D.ietf-lime-yang-connectionless-oam"?>

      <?rfc include="reference.I-D.ietf-mpls-base-yang"?>

      <?rfc include="reference.I-D.dsdt-nmda-guidelines"?>
    </references>

    <section anchor="ECHO-CONFIG" title="Echo function configuration example">
      <t>The following intervals
      are added for the echo function (if supported): <list hangIndent="8"
          style="hanging">
          <t hangText="desired-min-echo-tx-interval"><vspace/>This is the
          minimum interval that the local system would like to use when
          transmitting BFD echo packets. If 0, the echo function as defined in
          <xref target="RFC5880">BFD </xref> is disabled.</t>

          <t hangText="required-min-echo-rx-interval"><vspace/>This is the
          Required Min Echo RX Interval as defined in <xref
          target="RFC5880">BFD </xref>.</t>
        </list></t>

      <figure align="left">
        <preamble/>

        <artwork align="left"><![CDATA[
module: example-bfd-echo
  augment /rt:routing/rt:control-plane-protocols/rt:control-plane-proto
col/bfd:bfd/bfd-ip-sh:ip-sh/bfd-ip-sh:sessions:
    +--rw echo {bfd-types:echo-mode}?
       +--rw desired-min-echo-tx-interval?    uint32
       +--rw required-min-echo-rx-interval?   uint32
                     ]]></artwork>
      </figure>

      <section title="Example YANG module for BFD echo function">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[

module example-bfd-echo {
  namespace "tag:example.com,2017:example-bfd-echo";

  prefix "example-bfd-echo";

  import ietf-bfd-types {
    prefix "bfd-types";
  }

  import ietf-bfd {
    prefix "bfd";
  }

  import ietf-bfd-ip-sh {
    prefix "bfd-ip-sh";
  }

  import ietf-routing {
    prefix "rt";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:  Reshad Rahman (rrahman@cisco.com),
               Lianshu Zheng (vero.zheng@huawei.com),
               Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains an example YANG augmentation for configuration
     of BFD echo function.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference
      "RFC XXXX: A YANG data model example augmentation for BFD echo
       function";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  /*
   * Groupings
   */
  grouping echo-cfg-parms {
    description "BFD grouping for echo config parameters";
    leaf desired-min-echo-tx-interval {
      type uint32;
      units microseconds;
      default 0;
      description "Desired minumum transmit interval for echo";
    }

    leaf required-min-echo-rx-interval {
      type uint32;
      units microseconds;
      default 0;
      description "Required minimum receive interval for echo";
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/bfd:bfd/bfd-ip-sh:ip-sh/"
        + "bfd-ip-sh:sessions" {
    description "Augmentation for BFD echo fucntion.";

    container echo {
      if-feature bfd-types:echo-mode;

      description "BFD echo function container";

      uses echo-cfg-parms;
    }
  }
}
        ]]></artwork>
        </figure>
      </section>
    </section>

    <section title="BFD client configuration example">
       <t>The following is an example of how a BFD client could use the grouping client-cfg-parms.</t>

                      <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[
module: example-bfd-client
    +--rw area* [area-id]
       +--rw area-id      uint32
       +--rw bfd
       |  +--rw enable?                     boolean
       |  +--rw local-multiplier?           multiplier
       |  +--rw (interval-config-type)?
       |     +--:(tx-rx-intervals)
       |     |  +--rw desired-min-tx-interval     uint32
       |     |  +--rw required-min-rx-interval    uint32
       |     +--:(single-interval)
       |        +--rw min-interval                uint32
       +--rw interface* [interface]
          +--rw interface    if:interface-ref
          +--rw bfd
             +--rw enable?                     boolean
             +--rw local-multiplier?           multiplier
             +--rw (interval-config-type)?
                +--:(tx-rx-intervals)
                |  +--rw desired-min-tx-interval     uint32
                |  +--rw required-min-rx-interval    uint32
                +--:(single-interval)
                   +--rw min-interval                uint32
                     ]]></artwork>
        </figure>


      <section title="Example YANG module for BFD client">
        <figure align="left">
          <preamble/>

          <artwork align="left"><![CDATA[

module example-bfd-client {
  namespace "tag:example.com,2017:example-bfd-client";

  prefix "example-bfd-client";

  import ietf-bfd-types {
    prefix "bfd-types";
  }

  import ietf-interfaces {
    prefix "if";
  }

  organization "IETF BFD Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/bfd>
     WG List:  <rtg-bfd@ietf.org>

     Editors:  Reshad Rahman (rrahman@cisco.com),
               Lianshu Zheng (vero.zheng@huawei.com),
               Mahesh Jethanandani (mjethanandani@gmail.com)";

  description
    "This module contains an example of how a protocol which is a
     client of BFD would use BFD parameters.

     Copyright (c) 2017 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2017-10-30 {
    description "Initial revision.";
    reference
      "RFC XXXX: A YANG data model example for BFD client.";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note

  feature routing-app-bfd {
    description "BFD configuration under routing-app";
  }

  list area {
    key "area-id";

    description "Specify a routing area.";

    leaf area-id {
      type uint32;
      description "Area";
    }

    container bfd {
      description "BFD configuration for the area.";
      uses bfd-types:client-cfg-parms {
        if-feature routing-app-bfd;
      }
    }

    list interface {
      key "interface";
      description "List of interfaces";
      leaf interface {
        type if:interface-ref;
        description "Interface";
      }
      container bfd {
        description "BFD configuration for the interface.";
        uses bfd-types:client-cfg-parms {
          if-feature routing-app-bfd;
        }
      }
    }
  }

}
        ]]></artwork>
        </figure>
      </section>
    </section>

    <section title="Change log">
      <t>RFC Editor: Remove this section upon publication as an RFC.</t>

      <section title="Changes between versions -06 and -07">
        <t><list style="symbols">
            <t>New ietf-bfd-types module.</t>

            <t>Grouping for BFD clients to have BFD multiplier and interval
            values.</t>
            
            <t>Change in ietf-bfd-mpls-te since MPLS-TE model changed.</t>
            
            <t>Removed bfd- prefix from many names.</t>
          </list></t>
      </section>

      <section title="Changes between versions -05 and -06">
        <t><list style="symbols">
            <t>Adhere to NMDA-guidelines.</t>

            <t>Echo function config moved to appendix as example.</t>

            <t>Added IANA YANG modules.</t>

            <t>Addressed various comments.</t>
          </list></t>
      </section>

      <section title="Changes between versions -04 and -05">
        <t><list style="symbols">
            <t>"bfd" node in augment of control-plane-protocol as per <xref
            target="RFC8022">A YANG Data Model for Routing Management
            </xref>.</t>

            <t>Removed augment of network-instance. Replaced by
            schema-mount.</t>

            <t>Added information on interaction with other YANG modules.</t>
          </list></t>
      </section>

      <section title="Changes between versions -03 and -04">
        <t><list style="symbols">
            <t>Updated author information.</t>

            <t>Fixed YANG compile error in ietf-bfd-lag.yang which was due to
            incorrect when statement.</t>
          </list></t>
      </section>

      <section title="Changes between versions -02 and -03">
        <t><list style="symbols">
            <t>Fixed YANG compilation warning due to incorrect revision date
            in ietf-bfd-ip-sh module.</t>
          </list></t>
      </section>

      <section title="Changes between versions -01 and -02">
        <t><list style="symbols">
            <t>Replace routing-instance, which has been removed from <xref
            target="RFC8022">A YANG Data Model for Routing Management </xref>,
            with network-instance from <xref
            target="I-D.ietf-rtgwg-ni-model">YANG Network Instances</xref></t>
          </list></t>
      </section>

      <section title="Changes between versions -00 and -01">
        <t><list style="symbols">
            <t>Remove BFD configuration parameters from BFD clients, all BFD
            configuration parameters in BFD</t>

            <t>YANG module split in multiple YANG modules (one per type of
            forwarding path)</t>

            <t>For BFD over MPLS-TE we augment MPLS-TE model</t>

            <t>For BFD authentication we now use <xref target="RFC8177">YANG
            Data Model for Key Chains</xref></t>
          </list></t>
      </section>
    </section>
  </back>
</rfc>
